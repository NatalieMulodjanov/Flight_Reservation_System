/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lfrs;

import java.awt.Color;
import java.awt.Label;
import java.awt.TextField;
import java.util.*;
import javax.swing.JLabel;

/**
 *
 * @author NatalieM
 */
public class ClientViewForm extends javax.swing.JFrame implements FlightSystemViewable {

    private Controller controller;
    Label messageLabel = new Label();
    private Client client;
    private ResourceBundle rb;

    /**
     * Creates new form ClientViewForm
     */
    public ClientViewForm(Client client) {
        this.controller = new Controller(null, client, this);
        Locale l = Locale.getDefault();
        this.rb = ResourceBundle.getBundle("lfrs/Bundle", l);
        this.client = client;
        initComponents();
        controller.updateClientView();
        messageLabel.setVisible(true);
        messageLabel.setBounds(0, 200, 300, 25);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelReservButton = new javax.swing.JButton();
        searchDestinButton = new javax.swing.JButton();
        searchDurationButton = new javax.swing.JButton();
        searchOriginButton = new javax.swing.JButton();
        textFieldPanel = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        boardPanel = new javax.swing.JPanel();
        bookSeatButton = new javax.swing.JButton();
        viewFlightBoardButton = new javax.swing.JButton();
        viewFlightBoardButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(774, 775));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("lfrs/Bundle"); // NOI18N
        cancelReservButton.setText(bundle.getString("cancelReservation")); // NOI18N
        cancelReservButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelReservButtonActionPerformed(evt);
            }
        });

        searchDestinButton.setText(bundle.getString("searchFlightDestination")); // NOI18N
        searchDestinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDestinButtonActionPerformed(evt);
            }
        });

        searchDurationButton.setText(bundle.getString("searchFlightDuration")); // NOI18N
        searchDurationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDurationButtonActionPerformed(evt);
            }
        });

        searchOriginButton.setText(bundle.getString("searchFlightByOrigin")); // NOI18N
        searchOriginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchOriginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout textFieldPanelLayout = new javax.swing.GroupLayout(textFieldPanel);
        textFieldPanel.setLayout(textFieldPanelLayout);
        textFieldPanelLayout.setHorizontalGroup(
            textFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );
        textFieldPanelLayout.setVerticalGroup(
            textFieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 365, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout boardPanelLayout = new javax.swing.GroupLayout(boardPanel);
        boardPanel.setLayout(boardPanelLayout);
        boardPanelLayout.setHorizontalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        boardPanelLayout.setVerticalGroup(
            boardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );

        bookSeatButton.setText(bundle.getString("bookASeat")); // NOI18N
        bookSeatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookSeatButtonActionPerformed(evt);
            }
        });

        viewFlightBoardButton.setText(bundle.getString("viewFlightBoard")); // NOI18N
        viewFlightBoardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFlightBoardButtonActionPerformed(evt);
            }
        });

        viewFlightBoardButton1.setText("View Reserved Flights");
        viewFlightBoardButton1.setActionCommand(bundle.getString("viewReservedFlights")); // NOI18N
        viewFlightBoardButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFlightBoardButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(searchDestinButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchDurationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchOriginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelReservButton, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(viewFlightBoardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewFlightBoardButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(bookSeatButton, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(textFieldPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitButton)
                .addGap(24, 24, 24))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(textFieldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(bookSeatButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelReservButton)
                        .addGap(18, 18, 18)
                        .addComponent(searchDestinButton)
                        .addGap(18, 18, 18)
                        .addComponent(searchDurationButton)
                        .addGap(18, 18, 18)
                        .addComponent(searchOriginButton)
                        .addGap(18, 18, 18)
                        .addComponent(viewFlightBoardButton)
                        .addGap(18, 18, 18)
                        .addComponent(viewFlightBoardButton1)))
                .addGap(18, 18, 18)
                .addComponent(submitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(boardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelReservButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelReservButtonActionPerformed
        textFieldPanel.removeAll();
        TextField textField = new TextField();
        textField.setVisible(true);
        textField.setBounds(0, 0, 200, 25);
        textField.setText(rb.getString("enterTicketNumber"));
        textFieldPanel.add(textField);
        submitButton.setText(rb.getString("cancelReservation"));
        submitButton.setVisible(true);
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelReserveActionPerformed(evt);
            }
        });
    }//GEN-LAST:event_cancelReservButtonActionPerformed

    private void searchDestinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDestinButtonActionPerformed
        textFieldPanel.removeAll();
        TextField textField = new TextField();
        textField.setVisible(true);
        textField.setBounds(0, 0, 200, 25);
        textField.setText(rb.getString("enterDestination"));
        textFieldPanel.add(textField);
        submitButton.setText(rb.getString("searchDestination"));
        submitButton.setVisible(true);
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDestinActionPerformed(evt);
            }
        });

    }//GEN-LAST:event_searchDestinButtonActionPerformed

    private void bookSeatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookSeatButtonActionPerformed
        textFieldPanel.removeAll();
        TextField textField = new TextField();
        textField.setVisible(true);
        textField.setBounds(0, 0, 200, 25);
        textField.setText(rb.getString("enterFlightNumber"));
        textFieldPanel.add(textField);
        submitButton.setText(rb.getString("bookASeat"));
        submitButton.setVisible(true);
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookSeatActionPerformed(evt);
            }
        });
    }//GEN-LAST:event_bookSeatButtonActionPerformed

    private void searchDurationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDurationButtonActionPerformed
        textFieldPanel.removeAll();
        TextField textField = new TextField();
        textField.setVisible(true);
        textField.setBounds(0, 0, 200, 25);
        textField.setText(rb.getString("enterDuration"));
        textFieldPanel.add(textField);
        submitButton.setText(rb.getString("searchDuration"));
        submitButton.setVisible(true);
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDurationActionPerformed(evt);
            }
        });
    }//GEN-LAST:event_searchDurationButtonActionPerformed

    private void searchOriginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchOriginButtonActionPerformed
        textFieldPanel.removeAll();
        TextField textField = new TextField();
        textField.setVisible(true);
        textField.setBounds(0, 0, 200, 25);
        textField.setText(rb.getString("enterOrigin"));
        textFieldPanel.add(textField);
        submitButton.setText(rb.getString("searchOrigin"));
        submitButton.setVisible(true);
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchOriginActionPerformed(evt);
            }
        });
    }//GEN-LAST:event_searchOriginButtonActionPerformed

    private void viewFlightBoardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFlightBoardButtonActionPerformed
        controller.updateClientView();

    }//GEN-LAST:event_viewFlightBoardButtonActionPerformed

    private void viewFlightBoardButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFlightBoardButton1ActionPerformed
        printBoard(Controller.viewBookedFlights());
    }//GEN-LAST:event_viewFlightBoardButton1ActionPerformed

    private void bookSeatActionPerformed(java.awt.event.ActionEvent evt) {
        String flightNo = ((TextField) textFieldPanel.getComponent(0)).getText();
        textFieldPanel.add(messageLabel);
        try {
            if (controller.bookSeat(flightNo)) {
                messageLabel.setText(rb.getString("seatBookedSuccessfully"));
            } else {
                messageLabel.setText(rb.getString("failedBookSeat"));
                messageLabel.setForeground(Color.red);
            }
        } catch (Exception e) {
            messageLabel.setText(rb.getString("failedNoSeats") + e.getMessage());
            messageLabel.setForeground(Color.red);
            messageLabel.revalidate();
            messageLabel.repaint();
        }

    }

    private void searchDurationActionPerformed(java.awt.event.ActionEvent evt) {
        String duration = ((TextField) textFieldPanel.getComponent(0)).getText();
        textFieldPanel.add(messageLabel);
        List<Flight> flightList = controller.searchFlightByDuration(Integer.parseInt(duration));
        if (flightList.isEmpty()) {
            messageLabel.setText(rb.getString("thereAreNoFlightsInDuration"));
            messageLabel.setForeground(Color.red);
        }
        Map<String, String> updatedBoard = new TreeMap<>();
        for (Flight flight : flightList) {
            updatedBoard.put(flight.getFlightNo(),
                    " Name=" + flight.getName()
                    + " Origin=" + flight.getOrigin()
                    + " Destination=" + flight.getDestination()
                    + " Duration=" + flight.getDuration()
                    + " Seats=" + flight.getSeats()
                    + " AvailableSeats=" + flight.getSeatsAvailable()
                    + " Amount=" + flight.getTicketAmount());
        }
        printBoard(updatedBoard);
    }

    private void searchOriginActionPerformed(java.awt.event.ActionEvent evt) {
        String origin = ((TextField) textFieldPanel.getComponent(0)).getText();
        textFieldPanel.add(messageLabel);
        List<Flight> flightList = controller.searchFlightByOrigin(origin);
        if (flightList.isEmpty()) {
            messageLabel.setText(rb.getString("thereAreNoFlightsInThatOrigin"));
            messageLabel.setForeground(Color.red);
        }
        Map<String, String> updatedBoard = new TreeMap<>();
        for (Flight flight : flightList) {
            updatedBoard.put(flight.getFlightNo(),
                    " Name=" + flight.getName()
                    + " Origin=" + flight.getOrigin()
                    + " Destination=" + flight.getDestination()
                    + " Duration=" + flight.getDuration()
                    + " Seats=" + flight.getSeats()
                    + " AvailableSeats=" + flight.getSeatsAvailable()
                    + " Amount=" + flight.getTicketAmount());
        }
        printBoard(updatedBoard);
    }

    private void searchDestinActionPerformed(java.awt.event.ActionEvent evt) {
        String destination = ((TextField) textFieldPanel.getComponent(0)).getText();
        textFieldPanel.add(messageLabel);
        List<Flight> flightList = controller.searchFlightByDestination(destination);
        if (flightList.isEmpty()) {
            messageLabel.setText(rb.getString("thereAreNoFlightsInUrDestination"));
            messageLabel.setForeground(Color.red);
        }
        Map<String, String> updatedBoard = new TreeMap<>();
        for (Flight flight : flightList) {
            updatedBoard.put(flight.getFlightNo(),
                    " Name=" + flight.getName()
                    + " Origin=" + flight.getOrigin()
                    + " Destination=" + flight.getDestination()
                    + " Duration=" + flight.getDuration()
                    + " Seats=" + flight.getSeats()
                    + " AvailableSeats=" + flight.getSeatsAvailable()
                    + " Amount=" + flight.getTicketAmount());
        }
        printBoard(updatedBoard);
    }

    private void cancelReserveActionPerformed(java.awt.event.ActionEvent evt) {
        int ticketNo = Integer.parseInt(((TextField) textFieldPanel.getComponent(0)).getText());
        textFieldPanel.add(messageLabel);
        try {
            if (controller.cancelReservation(ticketNo)) {
                messageLabel.setText(rb.getString("reservationCancelled"));
            } else {
                messageLabel.setText(rb.getString("failedTicketNotFound"));
                messageLabel.setForeground(Color.red);
            }

        } catch (Exception e) {
            messageLabel.setText(rb.getString("failedToCancel") + e.getMessage());
            messageLabel.setForeground(Color.red);
            messageLabel.revalidate();
            messageLabel.repaint();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientViewForm(new Client()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel boardPanel;
    private javax.swing.JButton bookSeatButton;
    private javax.swing.JButton cancelReservButton;
    private javax.swing.JButton searchDestinButton;
    private javax.swing.JButton searchDurationButton;
    private javax.swing.JButton searchOriginButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JPanel textFieldPanel;
    private javax.swing.JButton viewFlightBoardButton;
    private javax.swing.JButton viewFlightBoardButton1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void printBoard(Map<String, String> board) {
        boardPanel.removeAll();
        int y = 0;
        for (Map.Entry<String, String> entry : board.entrySet()) {
            JLabel label = new JLabel();
            label.setBounds(0, y, 600, 25);
            label.setText(entry.getKey() + " " + entry.getValue());
            boardPanel.add(label);
            y += 25;
        }
        boardPanel.revalidate();
        boardPanel.repaint();
    }
}
